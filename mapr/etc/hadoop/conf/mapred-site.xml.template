<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
  <property>
    <name>mapreduce.jobhistory.address</name>
    <value>__HS_IP__:10020</value>
  </property>
  <property>
    <name>mapreduce.jobhistory.webapp.address</name>
    <value>__HS_IP__:19888</value>
  </property>
  <property>
    <name>mapreduce.jobhistory.webapp.https.address</name>
    <value>__HS_IP__:19890</value>
  </property>
  <!--
  <property>
    <name>mapreduce.framework.name</name>
    <value>yarn-tez</value>
  </property>
  -->

  <property>
     <name>mapreduce.job.counters.max</name>
     <value>240</value>
  </property>
  <property>
    <name>mapreduce.job.reduces</name>
    <value>{{ pillar.mapr.mapred.reduces }}</value>
  </property>
  
  {% set metainfo_split = pillar.mapr.mapred.metainfo_maxsplit %}
  <property>
    <name>mapreduce.job.split.metainfo.maxsize</name>
    <value>{{ metainfo_split }}</value>
  </property>

  <!-- Compression -->
  <property>
     <name>mapreduce.output.fileoutputformat.compress</name>
     <value>true</value>
  </property>
  <property>
     <name>mapreduce.output.fileoutputformat.compress.type</name>
     <value>BLOCK</value>
  </property>
  <property>
     <name>mapreduce.map.output.compress</name>
     <value>true</value>
  </property>
  <property>
    <name>mapreduce.map.output.compress.codec</name>
    <value>org.apache.hadoop.io.compress.SnappyCodec</value>
  </property>

  <property>
      <name>mapreduce.job.reduce.slowstart.completedmaps</name>
      <value>0.8</value>
  </property>
  <property>
      <name>mapreduce.reduce.shuffle.parallelcopies</name>
      <value>10</value>
  </property>
  <property>
     <name>mapreduce.map.speculative</name>
     <value>true</value>
   </property>
  <property>
     <name>mapreduce.reduce.speculative</name>
     <value>false</value>
   </property>
  <property>
     <name>mapreduce.reduce.shuffle.input.buffer.percent</name>
     <value>0.4</value>
  </property>

  <!-- Resources for App Masters -->
  <property>
      <name>yarn.app.mapreduce.am.resource.mb</name>
      <value>1024</value>
  </property>
  {% set am_opts = '-Xmx768m' %}
  {% if salt['pillar.get']('mapr:security:enable', False) %}
    {% set am_opts = am_opts ~ ' -Djava.security.krb5.conf=' ~ pillar.krb5.conf_file %}
  {% endif %}
  <property>
      <name>yarn.app.mapreduce.am.command-opts</name>
      <value>{{ am_opts }}</value>
  </property>
  <property>
      <name>yarn.app.mapreduce.am.resource.cpu-vcores</name>
      <value>1</value>
  </property>

  {% set memory_mb = pillar.mapr.mapred.memory_mb %}
  {% set heap_size = (memory_mb * 0.6666) | int %}
  {% set java_opts = salt['pillar.get']('mapr:mapred:child_java_opts', '-Xmx' ~ heap_size ~ 'm') %}

  {% set java_opts = java_opts ~ ' -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=' ~ salt['pillar.get']('mapr:mapred:heap_dump_path', '/mnt') %}

  {% if salt['pillar.get']('mapr:security:enable', False) %}
  {% set java_opts = java_opts ~ ' -Djava.security.krb5.conf=' ~ pillar.krb5.conf_file %}
  {% endif %}
  <!-- Resources for mappers -->
  <property>
      <name>mapreduce.map.memory.mb</name>
      <value>{{ memory_mb }}</value>
  </property>
  <property>
      <name>mapreduce.map.java.opts</name>
      <value>{{ java_opts }}</value>
  </property>
  <property>
      <name>mapreduce.map.cpu.vcores</name>
      <value>1</value>
  </property>
  <property>
      <name>mapreduce.map.disk</name>
      <value>0.1</value>
  </property>

  <!-- Resources for reducers -->
  <property>
      <name>mapreduce.reduce.memory.mb</name>
      <value>{{ memory_mb }}</value>
  </property>
  <property>
      <name>mapreduce.reduce.java.opts</name>
      <value>{{ java_opts }}</value>
  </property>
  <property>
      <name>mapreduce.reduce.cpu.vcores</name>
      <value>1</value>
  </property>
  <property>
      <name>mapreduce.reduce.disk</name>
      <value>0.1</value>
  </property>

  <!-- Sorting -->
  <property>
    <name>mapreduce.task.io.sort.factor</name>
    <value>{{ pillar.mapr.io.sort_factor }}</value>
  </property>
  <property>
    <name>mapreduce.task.io.sort.mb</name>
    <value>{{ pillar.mapr.io.sort_mb }}</value>
  </property>

  {% if pillar.mapr.kerberos %}
  {% from 'krb5/settings.sls' import krb5 with context %}
  <property>
    <name>mapreduce.jobhistory.keytab</name>
    <value>/opt/mapr/conf/mapr.keytab</value>
  </property>
  <property>
    <name>mapreduce.jobhistory.principal</name>
    <value>mapr/_HOST@{{ krb5.realm }}</value>
  </property>
  {% endif %}
</configuration>
